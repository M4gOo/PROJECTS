

Creating multiple Azure storage accounts, with each one having the appropriate settings for the data it holds, you can handle these types of business requirements and save money.

The policy factors that each type of storage account controls, which helps you decide how many accounts you need.

Azure Storage groups four (Azure Blobs, Azure Files, Azure Queues, and Azure Tables) data services together 

A storage account is a container that groups a set of Azure Storage services together. Only data services from Azure Storage can be included in a storage account (Azure Blobs, Azure Files, Azure Queues, and Azure Tables).
Other Azure data services, such as Azure SQL and Azure Cosmos DB, are managed as independent Azure resources and can't be included in a storage account. They are part of Resource Group, but not inside the Storage Acc.

A storage account defines a policy that applies to all the storage services in the account. For example, you can set the region, which department it will be billed, how it will be access (i.e. https), replication and etc.

replication:

The strategy used to make copies of your data to protect against hardware failure or natural disaster.
At a minimum, called locally redundant storage (LRS), Azure automatically maintains three copies of your data within the datacenter associated with the storage account, but doesn't protect you from an event that incapacitates the entire datacenter. 
You can upgrade to one of the other options such as geo-redundant storage (GRS) to get replication at different datacenters across the world.


### Typically, your data diversity, cost sensitivity, and tolerance for management overhead determine the number of storage accounts you need. If you need data in different regions, it is good to have 2 accounts separate.


- Data diversity

Do you have data that is specific to a country/region? 
If so, you might want to store the data in a datacenter in that country/region for performance or compliance reasons. 
You need one storage account for each geographical region.

Do you have some data that is proprietary and some for public consumption?
If so, you could enable virtual networks for the proprietary data and not for the public data. Separating proprietary data and public data requires separate storage accounts.


- Cost sensitivity

You could partition your data into critical and noncritical categories. You could place your critical data into a storage account with 
geo-redundant storage and put your noncritical data in a different storage account with locally redundant storage.


- Tolerance for management overhead

Storage accounts are powerful tools to help you obtain the performance and security you need while minimizing costs. A typical strategy is to start with an analysis of your data.
Create partitions that share characteristics like location, billing, and replication strategy. Then, create one storage account for each partition.


## Acc Setting

These settings (name, deployment model and acc kind) affect how you manage your account and the cost of the services within it.


The name must be globally unique within Azure, use only lowercase letters and digits and be between 3 and 24 characters.

The model defines the API that you use to create, configure, and manage those resources. Azure provides two deployment models:
- Resource Manager: the current model that uses the Azure Resource Manager API. Most Azure resources only work with Resource Manager
- Classic: a legacy offering that uses the classic deployment model

Storage account kind is a set of policies that determine which data services you can include in the account and the pricing of those services.
Standard - StorageV2 (general purpose v2): the current offering that supports all storage types and all of the latest features
Premium - Page blobs: Premium storage account type for page blobs only
Premium - Block blobs: Premium storage account type for block blobs and append blobs
Premium - File shares: Premium storage account type for file shares only


----- LAB

To-do list:
Video content must load quickly.
The site must handle unexpected spikes in upload volume.
Outdated content must be removed as surf conditions change so the site always shows current conditions.

You decide to buffer uploaded content in an Azure Queue for processing and then transfer it to an Azure Blob for persistent storage. 
You need a storage account that can hold both queues and blobs while delivering low-latency access to your content.


Create a storage acc > Advanced tab > tick the box Require secure transfer for REST API operations
Most of the time, you want to set secure transfer to enable; using HTTPS over the network is considered a best practice.

Networking tab > Network routing	
Select Microsoft network routing. We want to make use of the Microsoft global network that is optimized for low-latency path selection.











